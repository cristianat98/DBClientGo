name: Code Check

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - develop

jobs:
  precommit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      - name: Install go-pre-commit
        run: go install github.com/lietu/go-pre-commit@latest

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.62.2
      - name: Run pre-commit
        run: pre-commit run --all-files

  analysis:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Install go-acc
        run: go install github.com/ory/go-acc@latest

      - name: Run tests
        run: |
          export Mongo_URI="mongodb://localhost:27017"
          go-acc --tags=test -o coverage.out ./...

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=cristianat98
            -Dsonar.projectKey=cristianat98_DBClientGo
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.coverage.exclusions=**/*_mock.go
